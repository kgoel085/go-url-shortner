name: Deploy Project

permissions:
  contents: read
  packages: write
  id-token: write

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Project name'
        default: 'go-url-shortner'
      version:
        description: 'Version to deploy (e.g., 1.0.0)'
        required: true
        default: 'latest'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: Contabo VPS

    steps:
      - name: Debug secrets
        run: |
          echo "SERVER_IP=${{ secrets.SERVER_IP }}"
          echo "SERVER_USER=${{ secrets.SERVER_USER }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set deployment version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION=${{ github.event.inputs.version }}
          else
            VERSION=${GITHUB_REF_NAME#refs/tags/}
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/${{ github.event.inputs.project_name || 'go-url-shortner' }}
          echo "Building image $IMAGE:$VERSION"
          docker build -t $IMAGE:latest -t $IMAGE:$VERSION .
          docker push $IMAGE:latest
          docker push $IMAGE:$VERSION

      - name: Deploy on VPS
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.SERVER_PROJECT_BASE_PATH }}/${{ github.event.inputs.project_name || 'go-url-shortner' }}
            # Echo current directory
            echo "Current directory: $(pwd)"
            # List files in the directory
            ls -la
            docker compose pull
            docker compose up -d --remove-orphans
            docker system prune -f
